{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cabling/","title":"Cabling","text":"<p>Sip, kita bikin versi gampangnya ya bro. Anggap ini lo jalankan di satu VM (misalnya Ubuntu Server) di Proxmox. Targetnya: 1 IP publik bisa dipakai buat beberapa layanan internal (website, monitoring, dll).</p>"},{"location":"cabling/#1-siapin-vm","title":"1. Siapin VM","text":"<ul> <li> <p>Bikin VM di Proxmox (Ubuntu Server / Debian).</p> </li> <li> <p>Kasih IP private (contoh: <code>10.10.10.100</code>) dan pastikan bisa akses internet.</p> </li> <li> <p>Pastikan DNS domain/subdomain kampus nanti bisa diarahkan ke IP publik lo.</p> </li> </ul>"},{"location":"cabling/#2-install-nginx-certbot","title":"2. Install Nginx &amp; Certbot","text":"<p>Login ke VM lalu jalankan:</p> <pre><code>sudo apt update\nsudo apt install nginx -y\nsudo apt install certbot python3-certbot-nginx -y\n</code></pre>"},{"location":"cabling/#3-tes-nginx","title":"3. Tes Nginx","text":"<p>Buka browser \u2192 ketik IP VM (<code>http://10.10.10.100</code>) \u2192 harus keluar halaman \u201cWelcome to nginx!\u201d. Kalau muncul, artinya Nginx jalan.</p>"},{"location":"cabling/#4-buat-subdomain","title":"4. Buat Subdomain","text":"<p>Misalnya lo punya domain <code>npu.ac.id</code>, atur DNS (di registrar / Cloudflare):</p> <ul> <li> <p><code>monitoring.npu.ac.id</code> \u2192 arahkan ke IP publik lo</p> </li> <li> <p><code>website.npu.ac.id</code> \u2192 arahkan ke IP publik lo</p> </li> </ul>"},{"location":"cabling/#5-tambah-config-reverse-proxy","title":"5. Tambah Config Reverse Proxy","text":"<p>Edit config Nginx:</p> <pre><code>sudo nano /etc/nginx/sites-available/npu.conf\n</code></pre> <p>Isinya contoh:</p> <pre><code>server {\n    server_name monitoring.npu.ac.id;\n\n    location / {\n        proxy_pass http://10.10.1.10:3000;   # contoh Grafana\n    }\n}\n\nserver {\n    server_name website.npu.ac.id;\n\n    location / {\n        proxy_pass http://10.10.1.20:80;     # contoh Website kampus\n    }\n}\n</code></pre> <p>Simpan \u2192 lalu aktifkan:</p> <pre><code>sudo ln -s /etc/nginx/sites-available/npu.conf /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx\n</code></pre>"},{"location":"cabling/#6-pasang-ssl-gratis","title":"6. Pasang SSL (Gratis)","text":"<p>Jalankan:</p> <pre><code>sudo certbot --nginx -d monitoring.npu.ac.id -d website.npu.ac.id\n</code></pre> <p>Kalau berhasil, semua akses jadi https.</p>"},{"location":"cabling/#7-uji-coba","title":"7. Uji Coba","text":"<ul> <li> <p>Akses <code>https://monitoring.npu.ac.id</code> \u2192 harus nyambung ke Grafana.</p> </li> <li> <p>Akses <code>https://website.npu.ac.id</code> \u2192 harus nyambung ke web kampus.</p> </li> </ul>"},{"location":"cabling/#8-opsional-tambah-proteksi","title":"8. (Opsional) Tambah Proteksi","text":"<p>Misalnya monitoring hanya boleh diakses staff:</p> <pre><code>location / {\n    proxy_pass http://10.10.1.10:3000;\n    allow 192.168.1.0/24;\n    deny all;\n}\n</code></pre> <p>Jadi simpel gini aja bro:</p> <ul> <li> <p>VM jalanin Nginx.</p> </li> <li> <p>Nginx jadi \u201cpintu gerbang\u201d buat semua subdomain.</p> </li> <li> <p>Service di belakang tinggal taruh di IP private, gak usah punya IP publik.</p> </li> </ul> <p>Mau gue bikinin contoh topologi gambar biar lebih kebayang arus trafiknya?</p>"}]}