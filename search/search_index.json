{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"Selamat Datang di Dokumentasi Kerja Saya.","text":"<p>Halo, selamat datang di portal dokumentasi kerja saya \ud83d\udc4b. Website ini saya buat untuk menghimpun, merapikan, dan membagikan seluruh pekerjaan serta eksperimen saya di bidang jaringan komputer, sistem, dan IT infrastructure.  </p> <p>Semua isi di sini berangkat dari pengalaman nyata: - Setup dan konfigurasi perangkat jaringan (MikroTik, Cisco, Fortinet, Ruijie) - Eksperimen di server (Proxmox, FreeRADIUS, reverse proxy, monitoring tools) - Dokumentasi troubleshooting sehari-hari di kampus - Catatan pribadi seputar teknologi, literatur, hingga mindfulness  </p> <p>Tujuan saya sederhana: \ud83d\udc49 Supaya setiap konfigurasi, percobaan, dan solusi gak hilang ditelan lupa. \ud83d\udc49 Supaya orang lain juga bisa belajar dari pengalaman yang sama.  </p> <p>\u201cDokumentasi bukan hanya catatan teknis, tapi juga jejak perjalanan seorang engineer.\u201d  </p>"},{"location":"cabling/","title":"Cabling","text":"<p>```markdown</p>"},{"location":"cabling/#dokumentasi-cabling-layer-1","title":"Dokumentasi Cabling (Layer 1)","text":""},{"location":"cabling/#overview","title":"Overview","text":"<p>Cabling adalah pondasi utama dalam jaringan komputer. Tanpa kabel yang benar, jaringan tidak akan berjalan stabil. Jenis kabel yang umum digunakan adalah UTP (Unshielded Twisted Pair) dengan konektor RJ45.</p>"},{"location":"cabling/#jenis-kabel-lan","title":"Jenis Kabel LAN","text":"<ol> <li>Straight-Through Cable</li> <li>Digunakan untuk menghubungkan perangkat berbeda (PC ke Switch, Switch ke Router).</li> <li> <p>Urutan warna sesuai standar T568B - T568B.</p> </li> <li> <p>Crossover Cable</p> </li> <li>Digunakan untuk menghubungkan perangkat sejenis (PC ke PC, Switch ke Switch).</li> <li> <p>Urutan warna T568A - T568B.</p> </li> <li> <p>Rollover Cable</p> </li> <li>Biasanya untuk koneksi console (Cisco/Router).</li> <li>Susunan warnanya dibalik.</li> </ol>"},{"location":"cabling/#standar-warna-rj45","title":"Standar Warna RJ45","text":"<ul> <li>T568A</li> <li>Putih Hijau  </li> <li>Hijau  </li> <li>Putih Oranye  </li> <li>Biru  </li> <li>Putih Biru  </li> <li>Oranye  </li> <li>Putih Cokelat  </li> <li> <p>Cokelat  </p> </li> <li> <p>T568B</p> </li> <li>Putih Oranye  </li> <li>Oranye  </li> <li>Putih Hijau  </li> <li>Biru  </li> <li>Putih Biru  </li> <li>Hijau  </li> <li>Putih Cokelat  </li> <li>Cokelat  </li> </ul>"},{"location":"cabling/#langkah-praktik-crimping","title":"Langkah Praktik Crimping","text":"<ol> <li>Kupas kabel \u00b1 2 cm dari ujung.  </li> <li>Rapikan urutan warna sesuai standar (T568A / T568B).  </li> <li>Masukkan ke konektor RJ45 dengan urutan tidak berubah.  </li> <li>Crimp dengan tang crimping.  </li> <li>Tes dengan LAN tester untuk memastikan koneksi.</li> </ol>"},{"location":"cabling/#tips-lapangan","title":"Tips Lapangan","text":"<ul> <li>Gunakan kabel CAT5e minimal, lebih baik CAT6 untuk gigabit.  </li> <li>Hindari kabel menekuk tajam.  </li> <li>Jangan taruh kabel LAN berdekatan dengan kabel listrik (bisa kena interferensi).  </li> <li>Selalu tes sebelum pasang permanen.</li> </ul>"},{"location":"dns/","title":"Firewall and DNS","text":"<pre><code># Troubleshooting DNS &amp; Firewall Issues\n\n## Overview\nMasalah DNS dan firewall sering muncul di jaringan kampus maupun server.  \nGejala umumnya:\n- Website tidak bisa diakses (padahal internet normal).\n- IP bisa di-ping, tapi domain tidak resolve.\n- Port tertentu tertutup meski service sudah jalan.\n- Akses remote ke server/router ditolak.\n\n---\n\n## DNS Troubleshooting\n### 1. Cek Resolusi DNS\n</code></pre> <p>ping google.com nslookup google.com dig google.com</p> <pre><code>- Jika `ping 8.8.8.8` berhasil tapi `ping google.com` gagal \u2192 masalah ada di DNS resolver.\n\n### 2. Ganti Resolver\nEdit `/etc/resolv.conf`:\n</code></pre> <p>nameserver 8.8.8.8 nameserver 1.1.1.1</p> <pre><code>\n### 3. Cek di MikroTik\n</code></pre> <p>/ip dns print /ip dns set servers=8.8.8.8,1.1.1.1 allow-remote-requests=yes</p> <pre><code>\n---\n\n## Firewall Troubleshooting\n### 1. Cek Rules di MikroTik\n</code></pre> <p>/ip firewall filter print</p> <pre><code>- Pastikan tidak ada rule yang **drop** semua koneksi sebelum rule allow.\n\n### 2. Port Knocking\n- Teknik keamanan dengan \"membuka port\" hanya jika ada urutan port tertentu yang diakses.  \n- Masalah umum: user lupa urutannya \u2192 port remote (SSH/Winbox) tertutup.\n\nContoh rule knocking:\n</code></pre> <p>/ip firewall filter add chain=input protocol=tcp dst-port=7000 action=add-src-to-address-list  address-list=knock-knock address-list-timeout=30s add chain=input protocol=tcp dst-port=8000 src-address-list=knock-knock  action=add-src-to-address-list address-list=knock-open address-list-timeout=1m add chain=input protocol=tcp dst-port=22 src-address-list=knock-open action=accept</p> <pre><code>\n### 3. Tes Port Terbuka\nDari client:\n</code></pre> <p>nc -zv IP-SERVER 22 telnet IP-SERVER 80</p> <p>````</p>"},{"location":"dns/#kasus-umum","title":"Kasus Umum","text":"<ol> <li>DNS gagal resolve di server lokal</li> <li>Restart DNS service:      <code>systemctl restart systemd-resolved</code></li> <li> <p>Atau ganti resolver ke Google/Cloudflare.</p> </li> <li> <p>Service jalan, tapi gak bisa diakses dari luar</p> </li> <li>Cek binding service (<code>netstat -tulpn</code>).</li> <li>Pastikan firewall allow port service.</li> <li> <p>Jika di cloud \u2192 cek security group (AWS/GCP).</p> </li> <li> <p>Website 404 di Reverse Proxy</p> </li> <li>Cek konfigurasi <code>nginx/apache</code>.</li> <li>Pastikan hostname/domain sesuai.</li> <li>Cek log:      <code>tail -f /var/log/nginx/error.log</code></li> </ol>"},{"location":"dns/#tips-lapangan","title":"Tips Lapangan","text":"<ul> <li>Dokumentasikan setiap firewall rule \u2192 biar gampang tracing.  </li> <li>Jangan lupa whitelist IP engineer agar gak ngunci diri sendiri.  </li> <li>Gunakan monitoring (Grafana/Prometheus Blackbox) untuk deteksi port/service down.  </li> </ul>"},{"location":"freeradius/","title":"FreeRadius","text":"<pre><code># FreeRADIUS on Proxmox (Authentication Server)\n\n## Overview\nFreeRADIUS adalah server AAA (Authentication, Authorization, Accounting) yang banyak dipakai untuk:\n- Otentikasi login WiFi (campus/staff).\n- Integrasi dengan MikroTik, Cisco, Fortinet.\n- Logging user activity.\n\nProxmox digunakan sebagai hypervisor untuk menjalankan VM FreeRADIUS.\n\n---\n\n## Instalasi FreeRADIUS di Ubuntu VM (Proxmox)\n1. Buat VM baru di Proxmox (Ubuntu Server 22.04 disarankan).\n2. Update package:\n</code></pre> <p>apt update &amp;&amp; apt upgrade -y</p> <pre><code>3. Install FreeRADIUS:\n</code></pre> <p>apt install freeradius freeradius-utils -y</p> <pre><code>\n---\n\n## Konfigurasi Dasar\n1. **Tambah User di Clients.conf**\n</code></pre> <p>nano /etc/freeradius/3.0/clients.conf</p> <pre><code>Tambahkan:\n</code></pre> <p>client mikrotik { ipaddr = 192.168.11.1 secret = rahasia123 shortname = router-staff }</p> <pre><code>\n2. **Tambah User Test**\n</code></pre> <p>nano /etc/freeradius/3.0/mods-config/files/authorize</p> <pre><code>Tambahkan:\n</code></pre> <p>enggar Cleartext-Password := \"password123\"</p> <pre><code>\n3. Restart service:\n</code></pre> <p>systemctl restart freeradius</p> <pre><code>\n---\n\n## Testing\n- Jalankan perintah:\n</code></pre> <p>radtest enggar password123 127.0.0.1 0 testing123</p> <pre><code>Jika berhasil \u2192 akan muncul `Access-Accept`.\n\n- Integrasi dengan MikroTik:\n</code></pre> <p>/radius add service=login,ppp address=192.168.11.10 secret=rahasia123</p> <p>```</p>"},{"location":"freeradius/#tips-lapangan","title":"Tips Lapangan","text":"<ul> <li>Gunakan VM khusus untuk FreeRADIUS, jangan campur dengan service lain.</li> <li>Simpan password <code>secret</code> dengan aman.</li> <li>Dokumentasikan setiap client (router, switch, AP) yang terhubung.</li> </ul>"},{"location":"monitoring/","title":"Monitoring","text":"<pre><code># Monitoring dengan Prometheus &amp; Grafana\n\n## Overview\nPrometheus adalah time-series database yang digunakan untuk mengumpulkan metric (CPU, RAM, traffic, dll).  \nGrafana adalah visualization tools yang menampilkan metric dalam bentuk dashboard interaktif.  \nKombinasi ini powerful buat monitoring modern di server, network, dan aplikasi.\n\n---\n\n## Instalasi Prometheus\n1. Buat VM/Server (Ubuntu 22.04).\n2. Download Prometheus:\n</code></pre> <p>useradd --no-create-home --shell /bin/false prometheus mkdir /etc/prometheus /var/lib/prometheus</p> <p>wget https://github.com/prometheus/prometheus/releases/download/v2.45.0/prometheus-2.45.0.linux-amd64.tar.gz tar xvf prometheus-2.45.0.linux-amd64.tar.gz cd prometheus-2.45.0.linux-amd64</p> <pre><code>3. Pindahkan binary:\n</code></pre> <p>cp prometheus promtool /usr/local/bin/ cp -r consoles console_libraries /etc/prometheus cp prometheus.yml /etc/prometheus/</p> <pre><code>4. Buat service:\n</code></pre> <p>nano /etc/systemd/system/prometheus.service</p> <pre><code>Isi:\n</code></pre> <p>[Unit] Description=Prometheus After=network-online.target</p> <p>[Service] User=prometheus ExecStart=/usr/local/bin/prometheus  --config.file=/etc/prometheus/prometheus.yml  --storage.tsdb.path=/var/lib/prometheus</p> <p>[Install] WantedBy=multi-user.target</p> <pre><code>5. Start service:\n</code></pre> <p>systemctl daemon-reload systemctl enable prometheus systemctl start prometheus</p> <pre><code>6. Akses: `http://IP-SERVER:9090`\n\n---\n\n## Instalasi Grafana\n1. Tambahkan repo Grafana:\n</code></pre> <p>wget -q -O - https://packages.grafana.com/gpg.key | apt-key add - add-apt-repository \"deb https://packages.grafana.com/oss/deb stable main\" apt update apt install grafana -y</p> <pre><code>2. Start service:\n</code></pre> <p>systemctl enable grafana-server systemctl start grafana-server</p> <p><code>`` 3. Akses Grafana:</code>http://IP-SERVER:3000<code>(user/pass default:</code>admin/admin`).</p>"},{"location":"monitoring/#integrasi-prometheus-ke-grafana","title":"Integrasi Prometheus ke Grafana","text":"<ol> <li>Login ke Grafana \u2192 Connections \u2192 Data Sources \u2192 Add Data Source.</li> <li>Pilih Prometheus.</li> <li>Masukkan URL: <code>http://localhost:9090</code>.</li> <li>Save &amp; Test.</li> </ol>"},{"location":"monitoring/#exporter-yang-umum","title":"Exporter yang Umum","text":"<ul> <li>Node Exporter \u2192 monitoring CPU, RAM, Disk, Network server.</li> <li>Blackbox Exporter \u2192 monitoring ping/HTTP dari service eksternal.</li> <li>SNMP Exporter \u2192 monitoring switch, router, AP (via SNMP).</li> <li>MikroTik Exporter \u2192 khusus buat RouterOS metrics.</li> </ul>"},{"location":"monitoring/#tips-lapangan","title":"Tips Lapangan","text":"<ul> <li>Buat dashboard berbeda untuk server, network device, dan applications.</li> <li>Gunakan alerting (Telegram, Email, Slack) supaya langsung tau ada masalah.</li> <li>Rutin backup konfigurasi Grafana (dashboard JSON).</li> </ul>"},{"location":"monitoring/#hasil-kerja","title":"Hasil Kerja","text":"<p>Anda bisa melihat semua hasil kerja di website yang sudah dibangun. Monitoring Kaldyta at Nusa Putra University</p>"},{"location":"open-port-reverse/","title":"Port Forwarding & Reverse Proxy","text":"<pre><code># Port Forwarding &amp; Reverse Proxy\n\n## Overview\nPort forwarding dan reverse proxy dipakai buat nge-publish service internal biar bisa diakses dari luar.  \n- **Port Forwarding**: direct mapping dari port publik ke service internal.  \n- **Reverse Proxy (L7)**: lebih fleksibel, bisa routing berdasarkan hostname/domain.  \n\n---\n\n## 1. Port Forwarding di MikroTik\n### Contoh: Publish Web Server (xx.xxx.xxxx.5:80) ke Publik (WAN:80)\n</code></pre> <p>/ip firewall nat add chain=dstnat dst-address=PUBLIC_IP protocol=tcp dst-port=80  action=dst-nat to-addresses=xx.xx.xx.5 to-ports=80</p> <pre><code>\n### Publish RDP Server (xx.xx.xx.xx:3389) ke Publik (WAN:3389)\n</code></pre> <p>/ip firewall nat add chain=dstnat dst-address=PUBLIC_IP protocol=tcp dst-port=3389  action=dst-nat to-addresses=xx.xx.xx.xx to-ports=3389</p> <pre><code>\n&gt; \u26a0\ufe0f Jangan buka semua port langsung ke internet. Tambahkan rule firewall untuk whitelist IP engineer.\n\n---\n\n## 2. Reverse Proxy dengan Nginx\n### Install Nginx\n</code></pre> <p>apt update &amp;&amp; apt install nginx -y</p> <pre><code>\n### Struktur Konfigurasi\n- `/etc/nginx/sites-available/`\n- `/etc/nginx/sites-enabled/`\n\n### Contoh Config: Prometheus\nFile: `/etc/nginx/sites-available/prometheus.conf`\n</code></pre> <p>server { listen 80; server_name prometheus.domainkampus.ac.id;</p> <pre><code>location / {\n    proxy_pass http://xx.xx.xx.xx:9090;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n</code></pre> <p>}</p> <pre><code>\n### Contoh Config: Grafana\nFile: `/etc/nginx/sites-available/grafana.conf`\n</code></pre> <p>server { listen 80; server_name grafana.domainkampus.ac.id;</p> <pre><code>location / {\n    proxy_pass http://xx.xx.xx.xx:3000;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n</code></pre> <p>}</p> <pre><code>\nAktifkan config:\n</code></pre> <p>ln -s /etc/nginx/sites-available/prometheus.conf /etc/nginx/sites-enabled/ ln -s /etc/nginx/sites-available/grafana.conf /etc/nginx/sites-enabled/ nginx -t systemctl reload nginx</p> <pre><code>\n---\n\n## 3. SSL/TLS dengan Certbot (Let's Encrypt)\n### Install Certbot\n</code></pre> <p>apt install certbot python3-certbot-nginx -y</p> <pre><code>\n### Tambahkan SSL ke Domain\n</code></pre> <p>certbot --nginx -d prometheus.domainkampus.ac.id -d grafana.domainkampus.ac.id</p> <pre><code>\n---\n\n## 4. Best Practice\n- Gunakan reverse proxy untuk service yang berbasis web.  \n- Gunakan port forwarding hanya untuk service tertentu (misal SSH/RDP) dengan IP whitelist.  \n- Dokumentasikan semua mapping domain \u2192 IP internal.  \n- Tambahkan monitoring untuk nginx service:\n</code></pre> <p>systemctl status nginx tail -f /var/log/nginx/error.log</p> <p>```</p>"},{"location":"reverse-proxy/","title":"Reverse Proxy","text":"<pre><code># Reverse Proxy dengan 1 IP Public\n\n## Tujuan\nMenggunakan 1 IP Public untuk mengakses banyak service internal (Proxmox, Monitoring, Website Kampus, dll).\n\n## Langkah-langkah\n1. Install Nginx di server yang punya akses ke IP Public.\n   ```bash\n   sudo apt update &amp;&amp; sudo apt install nginx -y\n</code></pre> <ol> <li>Buat file konfigurasi baru untuk tiap service:</li> </ol> <p><code>bash    sudo nano /etc/nginx/sites-available/proxmox.conf</code></p> <p>Contoh isi:</p> <p>```    server {        listen 80;        server_name proxmox.kampus.ac.id;</p> <pre><code>   location / {\n       proxy_pass http://192.168.1.10:8006;\n       proxy_set_header Host $host;\n       proxy_set_header X-Real-IP $remote_addr;\n       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n   }\n</code></pre> <p>}    ``` 3. Aktifkan site:</p> <p><code>bash    sudo ln -s /etc/nginx/sites-available/proxmox.conf /etc/nginx/sites-enabled/    sudo systemctl restart nginx</code> 4. Ulangi langkah yang sama untuk service lain (misalnya monitoring, website, radius).</p>"},{"location":"reverse-proxy/#catatan-tambahan","title":"Catatan Tambahan","text":"<ul> <li>Pastikan DNS domain diarahkan ke IP Public server reverse proxy.</li> <li>Kalau belum ada domain, bisa testing pake <code>curl http://IP_PUBLIC:PORT</code>.</li> <li>Untuk HTTPS, gunakan Let's Encrypt:</li> </ul> <p><code>bash   sudo apt install certbot python3-certbot-nginx -y   sudo certbot --nginx -d proxmox.kampus.ac.id</code></p> <p>```</p>"},{"location":"vlan-bandwitdh/","title":"Bandwidth VLAN","text":"<pre><code># VLAN &amp; Bandwidth Management di MikroTik\n\n## Overview\nVirtual LAN (VLAN) digunakan untuk memisahkan jaringan logis dalam satu perangkat fisik.  \nBandwidth management digunakan untuk mengontrol alokasi kecepatan internet agar lebih adil dan stabil.\n\n## Studi Kasus\n- VLAN 11 untuk Staff (prioritas tinggi, bandwidth stabil).\n- VLAN 20 untuk Mahasiswa (bandwidth dibatasi).\n- VLAN 30 untuk Guest (akses terbatas).\n\n## Konfigurasi VLAN di MikroTik\n1. Buat VLAN interface\n</code></pre> <p>/interface vlan add name=vlan11 vlan-id=11 interface=ether2 /interface vlan add name=vlan20 vlan-id=20 interface=ether2 /interface vlan add name=vlan30 vlan-id=30 interface=ether2</p> <pre><code>\n2. Berikan IP pada tiap VLAN\n</code></pre> <p>/ip address add address=192.168.11.1/24 interface=vlan11 /ip address add address=192.168.20.1/24 interface=vlan20 /ip address add address=192.168.30.1/24 interface=vlan30</p> <pre><code>\n3. Tambahkan DHCP Server (opsional)\n</code></pre> <p>/ip dhcp-server add name=dhcp11 interface=vlan11 lease-time=8h address-pool=pool11 /ip dhcp-server add name=dhcp20 interface=vlan20 lease-time=8h address-pool=pool20 /ip dhcp-server add name=dhcp30 interface=vlan30 lease-time=4h address-pool=pool30</p> <pre><code>\n---\n\n## Bandwidth Management\nGunakan **Simple Queue** untuk memisahkan kecepatan internet per VLAN.\n\n### Limitasi Per VLAN\n</code></pre> <p>/queue simple add name=\"Staff\" target=vlan11 max-limit=20M/20M add name=\"Mahasiswa\" target=vlan20 max-limit=10M/10M add name=\"Guest\" target=vlan30 max-limit=2M/2M</p> <pre><code>\n### Limitasi Per-User (di VLAN tertentu)\nContoh limitasi untuk mahasiswa:\n</code></pre> <p>/queue simple add name=\"Student-Limit\" target=192.168.20.0/24 max-limit=2M/2M</p> <pre><code>\n---\n\n## Tips Lapangan\n- Gunakan **Queue Tree** jika ingin lebih detail (QoS, prioritasi aplikasi).  \n- Jangan lupa tes dengan `ping` dan `speedtest` setelah konfigurasi.  \n- Dokumentasikan setiap perubahan rule, agar mudah troubleshooting.  \n\n---\n\u2705 Dengan VLAN &amp; bandwidth management, jaringan lebih tertata, adil, dan stabil.\n</code></pre>"}]}